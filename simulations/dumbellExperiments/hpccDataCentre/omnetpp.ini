[General]

network = simplenetwork
sim-time-limit = 0.1s
record-eventlog=false
cmdenv-express-mode = true
cmdenv-redirect-output = false
cmdenv-output-file = dctcpLog.txt
**.client*.tcp.conn-8.cmdenv-log-level = detail
cmdenv-log-prefix = %t | %m |


cmdenv-event-banners = false
**.cmdenv-log-level = off

**.**.tcp.conn-*.cwnd:vector.vector-recording = true
**.**.tcp.conn-*.u:vector.vector-recording = true
**.**.tcp.conn-*.U:vector.vector-recording = true
**.**.tcp.conn-*.additiveIncrease:vector.vector-recording = true
c**.**.tcp.conn-*.sharingFlows:vector.vector-recording = true
**.**.tcp.conn-*.tau:vector.vector-recording = true
**.**.tcp.conn-*.txRate:vector.vector-recording = true
**.**.tcp.conn-*.rtt:vector.vector-recording = true
**.**.tcp.conn-*.lossRecovery:vector.vector-recording = true
**.**.tcp.conn-*.srtt:vector.vector-recording = true
**.**.tcp.conn-*.queueingDelay:vector.vector-recording = true
**.**.tcp.conn-*.estimatedRtt:vector.vector-recording = true
**.**.tcp.conn-*.avgRtt:vector.vector-recording = true
**.**.tcp.conn-*.ssthresh:vector.vector-recording = true
**.**.queue.queueLength:vector.vector-recording = true
**.**.queue.queueingTime:vector.vector-recording = true
**.**.queue.avgRttQueue:vector.vector-recording = true
**.**.ReceiverSideThroughput:vector.vector-recording = true
**.**.numberOfFlows:vector.vector-recording = true
**.**.persistentQueueingDelay:vector.vector-recording = true
**.**.alpha:vector.vector-recording = true
**.scalar-recording=false
**.vector-recording=false
**.bin-recording=false

**.server[*].app[*].*.thrMeasurementInterval = 0.0001s
**.server[*].app[*].*.thrMeasurementBandwidth = 12500000000

**.tcp.typename = "Orbtcp"
**.tcp.tcpAlgorithmClass = "OrbtcpFlavour"
**.tcp.advertisedWindow = 200000000
**.tcp.windowScalingSupport = true
**.tcp.windowScalingFactor = -1
**.tcp.increasedIWEnabled = true
**.tcp.delayedAcksEnabled = false
**.tcp.ecnWillingness = false
**.tcp.nagleEnabled = true
**.tcp.stopOperationTimeout = 4000s
**.tcp.mss = 1460
**.tcp.sackSupport = true
**.tcp.initialSsthresh = 0

**.client[*].numApps = 1
**.client[*].app[*].typename  = "OrbtcpSessionApp"
*.client[*].app[0].tClose = -1s
*.client[*].app[0].sendBytes = 2GB
*.client[*].app[0].dataTransferMode = "bytecount"
*.client[*].app[0].statistic-recording = true

**.server[*].numApps = 1
**.server[*].app[*].typename  = "TcpSinkApp"
**.server[*].app[*].serverThreadModuleType = "orbtcp.applications.tcpapp.TcpThroughputSinkAppThread"

**.ppp[*].queue.typename = "IntQueue"

**.additiveIncreasePercent = ${0.01, 0.02, 0.03,0.04,0.05}
**.eta = ${0.8, 0.85, 0.90,0.95,1.0}

[Config OneFlow12us]
extends = General

**.numberOfFlows = 1

*.client[0].app[0].connectAddress = "server[0]"
*.client[0].app[0].tOpen = 0s
*.client[0].app[0].tSend = 0s

*.client[*].app[0].connectAddress = "server[" + string(parentIndex()) +"]"
*.client[*].app[0].tOpen = 0s
*.client[*].app[0].tSend = 0.01s

**.ppp[*].queue.packetCapacity = 1020

[Config TwoFlows12us12us]
extends = General

**.numberOfFlows = 2

*.client[0].app[0].connectAddress = "server[0]"
*.client[0].app[0].tOpen = 0s
*.client[0].app[0].tSend = 0s

*.client[*].app[0].connectAddress = "server[" + string(parentIndex()) +"]"
*.client[*].app[0].tOpen = 0s
*.client[*].app[0].tSend = 0.02s

**.ppp[*].queue.packetCapacity = 1020
